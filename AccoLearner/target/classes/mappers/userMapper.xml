<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- @Mapper와 패키지명, 인터페이스명 같아야함 -->
<mapper namespace="kr.co.accoLearner.mapper.UserMapper">
  <!-- SQL 구문들 -->
  
  <!-- 회원가입 -->
  <!-- PostgreSQL의 BIGSERIAL은 자동 증가이므로, user_seq를 insert 후에 받아오고싶다면 아래처럼 설정 -->
  <insert id="insertUser" parameterType="kr.co.accoLearner.dto.UserDTO" useGeneratedKeys="true" keyProperty="userSeq" keyColumn="user_seq">  	
  	INSERT INTO users (login_id, password, nickname, email, email_subscribed) 
		VALUES (#{loginId}, #{password}, #{nickname}, #{email}, #{emailSubscribed})
  </insert>
  
  <!-- 회원탈퇴:논리적 -->
  <update id="deleteUser" parameterType="long" >
  	UPDATE users SET account_status = 'DELETED' WHERE user_seq = #{user_seq}
  </update>
  
  <!-- 아이디, 닉네임 중복, map : ${} 없이 그냥 test비교, map(checkField, checkValue) -->
  <select id="selectUserBy" parameterType="map" resultType="int">
		SELECT count(user_seq) FROM users
			WHERE
				<choose>
					<when test="checkField eq 'loginId'">
						login_id = #{checkValue}
					</when>
					<when test="checkField eq 'email'">
						email = #{checkValue}
					</when>
					<when test="checkField eq 'nickname'">
						nickname = #{checkValue}
					</when>
					<otherwise>
						1 = 0
					</otherwise>
				</choose>
  </select>
  
  
  <!-- 로그인 : SelectUserByUsername -->
  <select id="SelectUserByUsername" parameterType="string" resultType="kr.co.accoLearner.dto.UserDTO">
		SELECT * FROM users WHERE login_id = #{username}  
  </select>

  <!-- Refresh 토큰 가져오기 -->
  <select id="selectRefreshToken" parameterType="map" resultType="kr.co.accoLearner.dto.JwtRefreshDTO">
		SELECT * FROM users WHERE login_id = #{username} AND refresh_token = ${refreshToken}  
  </select>
  
  <!-- Refresh 토큰 DB 저장 -->
  <insert id="insertRefreshToken" parameterType="map">
  	INSERT INTO jwt_refresh(user_seq, refresh_token, created_at, expires_at)
  	VALUES (#{userSeq}, #{refreshToken}, #{createdAt}, #{expiresAt})
  </insert>
  
  <!-- Refresh 토큰 DB 업데이트 : 무효화 처리 -->
  <update id="updateRefreshToken" parameterType="map">
  	UPDATE jwt_refresh SET is_active = 'N' WHERE user_seq = #{userSeq} AND refresh_token = #{refreshToken}
  </update>
  
</mapper>
